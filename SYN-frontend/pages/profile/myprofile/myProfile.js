import React, { useEffect, useState } from "react";
import AuthHeader from "../../../common/navigation/authHeader";
import styles from "../../../styles/Profile.module.css";
import Head from "next/head";
import Image from "next/image";
import Cover_pic from "../../../public/images/Cover_pic.png";
import profile_picture from "../../../public/images/Profile_picture.png";
import tick from "../../../public/images/tick.svg";
import telegram from "../../../public/images/telegram.svg";
import insta from "../../../public/images/insta.svg";
import social from "../../../public/images/social.svg";
import linkedin from "../../../public/images/linkedin.svg";
import Link from "next/link";
import Cards from "../../../common/component/cards/card";
import youtube from "../../../public/images/youtube.svg";
import rightArrow from "../../../public/images/right_arrow_footer.png";
import Card from "../../../common/component/cards/card";
import dropDown from "../../../common/navigation/dropDown";
import Footer from "../../../common/navigation/footer";
import DropDown from "../../../common/navigation/dropDown";
import ethereumSvg from "../../../public/images/ethereum.svg";
import { useSelector,useDispatch } from "react-redux";
import lori from "../../../public/images/Lori Hart.png";
import Router from "next/router";
import userImage from "../../../public/images/userImage.png";
import withAuth from "../../../helpers/hoc";
import App from "../../_app";
import Followers from "./followers";
import Following from "./following";
import { getFollowingListAction,getFollowerListAction, createdCardResetAction } from "../../../action/dashboardActions";

function MyProfile() {
  //state of list length:
  const [followingLen,setFollowingLen] =useState()
  const [followerLen,setFollowerLen] =useState()
  //state:
  const [name, setName] = useState("");
  const [web, setWeb] = useState("");
  //base url :
  const baseURL = process.env.S3_ALLOW_URL;
  //getting data from redux
  const [image, setImage] = useState("");
  const [coverResult, setCoverResult] = useState("");
  const userData = useSelector((state) => state.loggedInReducer.userData);
  //state for category dropdown :
  const [ category, setCategory] = useState("")

  const handleCategory =(value)=>{
    // console.log("value`````",value)
    setCategory(value)
  }
  // console.log("HHHHHH",category)
const dispatch = useDispatch()
  //follower toggle state:
  const [follower,setFollower] = useState(false)
  const [following,setFollowing] = useState(false)
  useEffect(() => {
    if (userData.profile_photo) {
      if (
        userData.profile_photo.indexOf("http://") == 0 ||
        userData.profile_photo.indexOf("https://") == 0
      ) {
        setImage(userData.profile_photo);
      } else {
        setImage(baseURL + userData.profile_photo);
      }
    }
    if (userData.cover_photo) {
      if (
        userData.cover_photo.indexOf("http://") == 0 ||
        userData.cover_photo.indexOf("https://") == 0
      ) {
        setCoverResult(userData.cover_photo);
      } else {
        setCoverResult(baseURL + userData.cover_photo);
      }
    }
    if(userData){
      setName(userData.full_name);
      setWeb(userData.user_social_handlers__twitter);
    }
  }, [userData]);
//getting following list :
 useEffect(() => {
  const userToken = localStorage.getItem("token");
  // console.log("$$$$",userToken)
  if (userToken) {
    const foundToken = JSON.parse(userToken);
    // console.log("!!!!!!",foundToken)
    dispatch(getFollowingListAction(foundToken));
    dispatch(getFollowerListAction(foundToken));
  }
}, []);
//getting following list from redux:
const followingList = useSelector(
  (state) => state.followReducer.followingData
);

useEffect(() => {
  if (followingList) {
   setFollowingLen(followingList.length)
  }
}, [followingList]);
//getting follower list from redux:
const followerList = useSelector(
  (state) => state.followReducer.followerData
);

useEffect(() => {
  if ( followerList) {
   setFollowerLen( followerList.length)
  }
}, [ followerList]);

//toggling follower popup:
const handleFollower = ()=>{
setFollower(!follower)
}
//toggling following popup:
const handleFollowing = ()=>{
  setFollowing(!following)
  }
  //handling mode:
  const[mode,setMode] = useState('owner')
const handleMode =()=>{
  dispatch(createdCardResetAction())
  setMode('owner')
}
const handleMode2 =()=>{
  dispatch(createdCardResetAction())
  setMode('created')

}
const handleMode3 =()=>{
  dispatch(createdCardResetAction())
  setMode('favourite')
}
  return (
    
    <div className={styles.backgroundDetails}>
      <Head>
        <title>My_Profile</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      {follower?
      <Followers handleParentPopup={handleFollower}/>
      :
     
      <div className="container">
       {following?
       <Following handleFollowing = {handleFollowing}/>
       :
       <>
        <AuthHeader />
        <div>
          <Image
            // src={Cover_pic}
            src={coverResult ? coverResult : Cover_pic}
            alt="cover image"
            className={styles.cover_pic}
            height={276}
            width={1420}
          ></Image>
        </div>
        <div>
          <div className={styles.left}>
            <div className={styles.info}>
              <div className={styles.user}>
                <div className={styles.user_upper}>
                  <div className={styles.user_left}>
                    <Image
                      src={image ? image : userImage}
                      // src={userImage}
                      height={100}
                      width={100}
                      alt="no image"
                      className={styles.profile_picture}
                    ></Image>
                    <div className={styles.profileuser}>
                      <div className={styles.profileDetails}>
                        <h2 className={styles.profile_name}>
                          {name ? name : ""}
                        </h2>
                        <Image
                          src={tick}
                          className={styles.tick}
                          alt=""
                        ></Image>
                      </div>

                      <Link href="/">
                        <a className={styles.profilepara}>{web ? web : ""}</a>
                      </Link>
                      <div className={styles.socialIcons}>
                    
                        <Image
                          src={insta}
                          className={styles.ssocialImages}
                        ></Image>
                        <Image
                          src={linkedin}
                          className={styles.socialImages}
                        ></Image>
                        <Image
                          src={social}
                          className={styles.socialImages}
                        ></Image>
                        <Image
                          src={telegram}
                          className={styles.socialImages}
                        ></Image>
                      </div>
                    </div>
                  </div>
                  <div>
                    <ul className={styles.followListUL}>
                      <li className={styles.followlist}>
                        <h2 className={styles.followhead} onClick={ handleFollower}>Followers</h2>
                        <h2 className={styles.followhead}>{followerLen?followerLen:""}</h2>
                      </li>
                      <li className={styles.followlist}>
                        <h2 className={styles.followhead} onClick={handleFollowing}>Following</h2>
                        <h2 className={styles.followhead}>{followingLen?followingLen:""}</h2>
                      </li>
                    </ul>
                  </div>
                </div>
                <div className={styles.middleContent}>
                  <div className={styles.middlepara}>
                    <p className={styles.middleDetail}>24</p>
                    <p className={styles.middleDetail1}>items</p>
                  </div>
                  <div className={styles.middlepara}>
                    <p className={styles.middleDetail}>25</p>
                    <p className={styles.middleDetail1}>Owners</p>
                  </div>
                  <div className={styles.middlepara}>
                    <p className={styles.middleDetail}>
                      {" "}
                      <Image
                        src={ethereumSvg}
                        className={styles.ethereumSvg}
                        alt=""
                      ></Image>
                      1.1
                    </p>
                    <p className={styles.middleDetail1}>base price</p>
                  </div>
                  <div className={styles.middlepara}>
                    <p className={styles.middleDetail}>
                      <Image
                        src={ethereumSvg}
                        className={styles.ethereumSvg}
                        alt=""
                      ></Image>
                      9.9
                    </p>
                    <p className={styles.middleDetail1}> total volume</p>
                  </div>
                </div>
                {/* <div className={styles.nav_tab}>
                  <ul className={styles.tab_upper}>
                    <li className={`${styles.tab_list} ${styles.tabactive}`}>
                      Owner
                    </li>
                    <li className={styles.tab_list}>Crated</li>
                    <li className={styles.tab_list}>Favourites</li>
                  </ul>
                
                </div> */}
                <div className="navTabs_custom">
                  <ul className="nav nav-tabs" id="myTab" role="tablist">
                    <li className="nav-item" role="presentation">
                      <button
                        className="nav-link active"
                        id="home-tab"
                        data-bs-toggle="tab"
                        data-bs-target="#home"
                        type="button"
                        role="tab"
                        aria-controls="home"
                        aria-selected="true"
                        onClick={handleMode}
                      >
                       Owner
                      </button>
                    </li>
                    <li className="nav-item" role="presentation">
                      <button
                        className="nav-link"
                        id="profile-tab"
                        data-bs-toggle="tab"
                        data-bs-target="#profile"
                        type="button"
                        role="tab"
                        aria-controls="profile"
                        aria-selected="false"
                        onClick={handleMode2}
                      >
                      Create
                      </button>
                    </li>
                    <li className="nav-item" role="presentation">
                      <button
                        className="nav-link"
                        id="contact-tab"
                        data-bs-toggle="tab"
                        data-bs-target="#contact"
                        type="button"
                        role="tab"
                        aria-controls="contact"
                        aria-selected="false"
                        onClick={handleMode3}
                      >
                     Favourites
                      </button>
                    </li>
                  </ul>
                  <div className={styles.main_dropdown}>
                  <DropDown handleCategory = {handleCategory}/>
                  </div>
                  <div className="tab-content" id="myTabContent">
                    <div
                      className="tab-pane fade show active"
                      id="home"
                      role="tabpanel"
                      aria-labelledby="home-tab"
                    > {mode==='owner'?
                      <Card mode={mode}
                        category={category}/>
                      :""}
                    </div>
                    <div
                      className="tab-pane fade"
                      id="profile"
                      role="tabpanel"
                      aria-labelledby="profile-tab"
                    >
                      {mode==='created'?
                     <Card mode={mode}
                     category={category}/>
       :""}
                    </div>
                    <div
                      className="tab-pane fade"
                      id="contact"
                      role="tabpanel"
                      aria-labelledby="contact-tab"
                    >
                      {mode==='favourite'?
                      <Card mode={mode}
                      category={category}/>
                      :""}
                    </div>
                  </div>
                </div>

                <div>
                  <div className={styles.LoadButton}>
                    <button
                      className={`${styles.headerBtn} ${styles.headerBtn1} border-0`}
                    >
                      Load More
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        </>
}
      </div>   
           
}


      {/************************** footer section starts **********************/}
      <Footer />
      {/*********************************** <!-- Footer End--> ******************************/}
    </div>
  );
}
export default withAuth(MyProfile);
