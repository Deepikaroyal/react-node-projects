import React from "react";
import styles from "../../../styles/Profile.module.css";
import close from "../../../public/images/close2.svg";
import followers from "../../../public/images/Diane1.png";
import Image from "next/image";
import Head from "next/head";
import tick from "../../../public/images/tick.svg";
import withAuth from "../../../helpers/hoc";
import { useState, useEffect } from "react";
import { useDispatch, useSelector } from "react-redux";
import { getFollowingListAction,unFollowAction} from "../../../action/dashboardActions";
import userImage from "../../../public/images/userImage.png";
function Following(props) {
  //base url :
  const baseURL = process.env.S3_ALLOW_URL;
  //state for suggesstion list:
  const [list, setList] = useState([]);
    //state for follow api response:
    const [unFollowResponse,setUnFollowResponse] = useState()
    const[uniqueId,setUniqueId] = useState({
      id:""
    })
  const dispatch = useDispatch();

  //getting data from redux:
  const followingList = useSelector(
    (state) => state.followReducer.followingData
  );
  // console.log("****", followingList);
  useEffect(() => {
    if (followingList) {
      setList({ followingList });
    }
    // console.log("&&&&&",list)
  }, [followingList]);
  //parent toggle:
  const handleParent = () => {
    props.handleFollowing();
  };
    //for unfollow api:
    function handleUnfollowApi(i){
      const userId = {
        followId: i,
      };
       dispatch(unFollowAction(userId))
       setUniqueId(i)
    }
    //getting data from redux
    const unFollow = useSelector((state) => state.followReducer.unFollowApi);
    useEffect(()=>{
      if(unFollow==1){
        console.log("%%%",unFollow)
      //  setUnFollowResponse({unFollow}) 
       setUnFollowResponse(!unFollowResponse);
      }  
    },[unFollow])
    useEffect(()=>{
      const userToken = localStorage.getItem("token");
      if (userToken) {
        const foundToken = JSON.parse(userToken);
        dispatch(getFollowingListAction(foundToken));
      }
    },[unFollowResponse])
  return (
    <div className="container">
      <Head>
        <title>Following</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <div className={styles.main_follow_div}>
        <div className={styles.sub_follow_div}>
          <div className={styles.followers_content}>
            <div className={styles.followSection}>
              <h2 className={styles.main_follow_head}>Following</h2>
              <Image
                src={close}
                className={close}
                onClick={handleParent}
              ></Image>
            </div>
          </div>
          <span className={styles.lineHR_follow}></span>
               <div className={styles.wrap_div}>
        
          {/* $$$$ */}
          {list.followingList?.map((item, i) => (
            <div className={styles.sub_follow_content} key={item.id}>
              <div className={styles.sub_left_follow}>
                {item.profile_photo.indexOf("http://") == 0 ||
                item.profile_photo.indexOf("https://") == 0 ? (
                  <Image
                    src={item.profile_photo ? item.profile_photo : userImage}
                    className={styles.follower_img}
                    alt="userProfile"
                    height={50}
                    width={50}
                  ></Image>
                ) : (
                  <Image
                    src={
                      item.profile_photo === ""
                        ? userImage
                        : baseURL + item.profile_photo
                    }
                    className={styles.follower_img}
                    alt="userProfile"
                    height={50}
                    width={50}
                  ></Image>
                )}
                <div className={styles.follower_verify}>
                  <h2 className={styles.follower_name}>
                    {item.full_name ? item.full_name : ""}
                  </h2>
                  <Image src={tick} className={styles.tick}></Image>
                </div>
              </div>
              <div className={styles.removebtn}>
                <h6  className={styles.remove_clr_following} key={item.id} onClick={()=>handleUnfollowApi(item.id)}>
                  {uniqueId===item.id?'Follow':'Following'}           
                </h6>
              </div>
            </div>
          ))}
          {/* $$$$ */}
          {/* <div className={styles.sub_follow_content}>
            <div className={styles.sub_left_follow}>
              <Image src={followers} className={styles.follower_img}></Image>
              <div className={styles.follower_verify}>
                <h2 className={styles.follower_name}>Diane</h2>
                <Image src={tick} className={styles.tick}></Image>
              </div>
            </div>
            <div className={styles.removebtn}>
              <a href="" className={styles.remove_clr_following}>
                Following
              </a>
            </div>
          </div> */}
          {/* <div className={styles.sub_follow_content}>
            <div className={styles.sub_left_follow}>
              <Image src={followers} className={styles.follower_img}></Image>
              <div className={styles.follower_verify}>
                <h2 className={styles.follower_name}>Diane</h2>
                <Image src={tick} className={styles.tick}></Image>
              </div>
            </div>
            <div className={styles.removebtn}>
              <a href="" className={styles.remove_clr_following}>
                Following
              </a>
            </div>
          </div> */}

          {/* <div className={styles.sub_follow_content}>
            <div className={styles.sub_left_follow}>
              <Image src={followers} className={styles.follower_img}></Image>
              <div className={styles.follower_verify}>
                <h2 className={styles.follower_name}>Otherdeed</h2>
                <Image src={tick} className={styles.tick}></Image>
              </div>
            </div>
            <div className={styles.removebtn}>
              <a href="" className={`${styles.remove_clr_following}`}>
                Following
              </a>
            </div>
          </div> */}

          </div>
        </div>
      </div>
    </div>
  );
}
export default withAuth(Following);
