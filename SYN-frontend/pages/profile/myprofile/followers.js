import React from "react";
import styles from "../../../styles/Profile.module.css";
import close from "../../../public/images/close2.svg";
import followers from "../../../public/images/Diane1.png";
import Image from "next/image";
import Head from "next/head";
import tick from "../../../public/images/tick.svg";
import withAuth from "../../../helpers/hoc";
import { useDispatch,useSelector } from "react-redux";
import { getFollowerListAction,unFollowAction } from "../../../action/dashboardActions";
import { useState,useEffect } from "react";
import userImage from "../../../public/images/userImage.png";
 function Followers (props) {
    //base url :
  const baseURL = process.env.S3_ALLOW_URL;
  //state for suggesstion list:
  const [list, setList] = useState([]);
   //state for follow api response:
   const [unFollowResponse,setUnFollowResponse] = useState(false)
   const[uniqueId,setUniqueId] = useState({
     id:""
   })
  const dispatch = useDispatch();
  //action for user  suggestion :
  // useEffect(() => {
  //   const userToken = localStorage.getItem("token");
  //   // console.log("$$$$",userToken)
  //   if (userToken) {
  //     const foundToken = JSON.parse(userToken);
  //     // console.log("!!!!!!",foundToken)
  //     dispatch(getFollowerListAction(foundToken));
  //   }
  // }, []);
  //getting data from redux:
  const followingList = useSelector(
    (state) => state.followReducer.followerData
  );
  //console.log("****", followingList);
  useEffect(() => {
    if (followingList) {
      setList({ followingList });
    }
    //console.log("&&&&&",list)
  }, [followingList]);

  const parentToggle = ()=>{
    props.handleParentPopup()
  }
   //for unfollow api:
   function handleUnfollowApi(i){
    const userId = {
      followId: i,
    };
      dispatch(unFollowAction(userId))
     setUniqueId(i)
  }
  //getting data from redux
  const unFollow = useSelector((state) => state.followReducer.unFollowApi);
  console.log("followww2222",unFollow)
  useEffect(()=>{
    
    if(unFollow===1){
     // console.log("%%%",follow)
    //  setUnFollowResponse({unFollow}) 
    setUnFollowResponse(!unFollowResponse);
    }  
  },[unFollow])
  useEffect(()=>{
    const userToken = localStorage.getItem("token");
    if (userToken) {
      const foundToken = JSON.parse(userToken);
      dispatch(getFollowerListAction(foundToken));
    }
  },[unFollowResponse])
  return (
    <div className="container">
      <Head>
        <title>Followers</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <div className={styles.main_follow_div}>
        <div className={styles.sub_follow_div}>
        <div className={styles.followers_content}>
              <div className={styles.followSection}>
                <h2 className={styles.main_follow_head}>Followers</h2>
                <Image
                  src={close}
                  className={close}
                  onClick={parentToggle}
                ></Image>
              </div>
            </div>
            <span className={styles.lineHR_follow}></span>
          <div className={styles.wrap_div}>
        
           
           
         
          {list.followingList?.map((item, i) => (
          <div className={styles.sub_follow_content} key={item.id}>
            <div className={styles.sub_left_follow}>
            {item.profile_photo.indexOf("http://") == 0 ||
                item.profile_photo.indexOf("https://") == 0 ? (
              <Image src={item.profile_photo ? item.profile_photo :userImage} className={styles.follower_img}  alt="userProfile"
              height={50}
              width={50}></Image>
              ) : (
                <Image
                src={
                  item.profile_photo === ""
                    ? userImage
                    : baseURL + item.profile_photo
                }
                className={styles.follower_img}
                alt="userProfile"
                height={50}
                width={50}
              ></Image>
              )}
              <div className={styles.follower_verify}>
                <h2 className={styles.follower_name}>{item.full_name ? item.full_name : ""}</h2>
                <Image src={tick} className={styles.tick}></Image>
              </div>
            </div>
            <div className={styles.removebtn}>
              <h6 className={styles.remove_clr} 
              onClick={()=>handleUnfollowApi(item.id)} key ={item.id}>{uniqueId===item.id?'Follow':'Remove'}
                </h6>
            </div>
          </div>
 ))}

        </div>
      </div>
    </div>
    </div>

  );
}
export default withAuth(Followers);
