import React from "react";
import Link from "next/link";
import styles from "../../styles/Auth.module.css";
import setnewPassword from "../../public/images/set_new_password.svg";
import Head from "next/head";
import Image from "next/image";
import show from "../../public/images/show.svg";
import hide from "../../public/images/hide.svg";
import { useState } from "react";
import { newPasswordValidation } from "../../helpers/helpers";
import { newPasswordAction } from "../../action";
import { useDispatch } from "react-redux";
import { ToastContainer } from "react-toastify";
export default function NewPassword() {
  const dispatch = useDispatch();
  //initial state:
  const [user, setUser] = useState({
    password: "",
    confirmPassword: "",
  });
  //function handleChange:
  function handleChange(event) {
    const { name, value } = event.target;
    setUser({ ...user, [name]: value });
  }
  //validation state:
  let isValid;
  const [error, setError] = useState({});
  //password eye button:
  const [eyeToggle, setEyeToggle] = useState(true);
  const [eye, setEye] = useState("password");
  const [eyeImage, setEyeImage] = useState(hide);
  // Confirm password eye button:
  const [toggle, setToggle] = useState(true);
  const [eyeInput, setEyeInput] = useState("password");
  const [eyeImageToggle, setEyeImageToggle] = useState(hide);
  //handling password toggling:
  function handlePasswordToggle() {
    setEyeToggle(!eyeToggle);
    //console.log("$$$$$$$", eyeToggle);
    if (eyeToggle == true) {
      // console.log("!!!!!!!!", eyeToggle);
      setEye("text");
      setEyeImage(show);
    } else if (eyeToggle == false) {
      // console.log("****************88", eyeToggle);
      setEye("password");
      setEyeImage(hide);
    }
  }
  //handling confirm password toggle:
  function confirmPasswordToggle() {
    setToggle(!toggle);
    // console.log("$$$$$$$", eyeToggle);
    if (toggle == true) {
      // console.log("!!!!!!!!", eyeToggle);
      setEyeInput("text");
      setEyeImageToggle(show);
    } else if (toggle == false) {
      // console.log("****************88", eyeToggle);
      setEyeInput("password");
      setEyeImageToggle(hide);
    }
  }

  //handling form validation:
  const validate = () => {
    const res = newPasswordValidation(user.password, user.confirmPassword);
    setError(res.errors);
    isValid = res.formIsValid;
  };
  //handling form submission:
  const handleSubmit = (event) => {
    event.preventDefault();
    validate();
    if (isValid == true) {
      // console.log("&&&&",isValid)
      const userDetails = {
        new_password: user.password,
        confirm_password: user.confirmPassword,
      };
      dispatch(newPasswordAction(userDetails));
    }
  };
  return (
    <div>
      <div className={styles.maincontent}>
        <Head>
          <title>Set new password</title>
          <meta name="description" content="Generated by create next app" />
        </Head>
        <div className={styles.loginFormWrapper}>
          {/* <div className={styles.container}> */}
          <div className={styles.loginForm}>
            <div
              className={`d-flex align-items-center justify-content-between`}
            >
              <div className={`d-flex align-items-center`}>
                <Image
                  src={setnewPassword}
                  className={styles.Image1}
                  alt=""
                ></Image>
                <h4 className={styles.txtVerify}>Set New Password</h4>
              </div>
              {/* <Image src={cross}></Image> */}
            </div>
            <div className={styles.loginHead}>
              <p className={styles.contentHead}>
                Your new password must be different to previously used
                passwords.
              </p>
            </div>

            <span className={styles.line}></span>

            <form
              action=""
              className={styles.formMargin}
              onSubmit={handleSubmit}
            >
              <div>
                <h3 className={styles.txtEnter}>Enter New Password</h3>
                <div className={styles.input}>
                  {/* <Image src={show} className={styles.show}></Image> */}
                  <div className={styles.eyeBUTTON}>
                  <input
                    name="password"
                    type={eye}
                    placeholder="Password"
                    maxLength={25}
                    className={styles.inputEmail}
                    onChange={handleChange}
                    onKeyUp={validate}
                  />
              
                  <span className={styles.iconWrapper}>
                    <Image
                      src={eyeImage}
                      alt="eye-svg"
                      className={styles.eyeButton}
                      onClick={handlePasswordToggle}
                    ></Image>
                  </span>
                  </div>
                  <span id="span_name" className={styles.errMsg}>
                    {error["passError"]}
                  </span>
                  &nbsp;
                </div>
                <h3 className={styles.txtPwd}>Enter New Confirm Password</h3>
                <div className={styles.input}>
                <div className={styles.eyeBUTTON}>
                  <input
                    name="confirmPassword"
                    type={eyeInput}
                    placeholder="Confirm Password"
                   maxLength={25}
                    className={styles.inputEmail}
                    onChange={handleChange}
                    onKeyUp={validate}
                  />
               
                  {/*eyebutton */}
                  <span className={styles.iconWrapper}>
                    <Image
                      src={eyeImageToggle}
                      alt="eye-svg"
                      className={styles.eyeButton}

                      onClick={confirmPasswordToggle}
                    ></Image>
                  </span>
                  </div>
                  <span id="span_name" className={styles.errMsg}>
                    {error["confirmPassError"]}
                  </span>
                  &nbsp;
                  {/* <span className={styles.errMsg}>Enter valid password</span> &nbsp; */}
                  {/* <span className={styles.errMsg}>Field can't be empty</span> */}
                  {/* show */}
                </div>
              </div>
              <button
                type="Login"
                className={`${styles.verifyButton} btn btn-primary`}
              >
                Verify
              </button>
            </form>

          </div>
          {/* </div> */}
        </div>
      </div>
      <ToastContainer />
    </div>
  );
}
