{"ast":null,"code":"var _jsxFileName = \"/home/mobcoder/Desktop/reactbatch2022/imageCropper/src/Components/AppCropper.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './index.css';\nimport ImageCropper from \"./ImageCropper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppCropper() {\n  _s();\n  const [imageToCrop, setImageToCrop] = useState(undefined);\n  const [croppedImage, setCroppedImage] = useState(undefined);\n  const onUploadFile = event => {\n    if (event.target.files && event.target.files.length > 0) {\n      const reader = new FileReader();\n      reader.addEventListener('load', () => setImageToCrop(reader.result));\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: onUploadFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ImageCropper, {\n        imageToCrop: imageToCrop,\n        onImageCropped: croppedImage => setCroppedImage(croppedImage)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), croppedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cropped Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"Cropped Image\",\n        src: croppedImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_s(AppCropper, \"xFDz/2zNezW/TnWGgX0TYcB9W+Q=\");\n_c = AppCropper;\nexport default AppCropper;\nvar _c;\n$RefreshReg$(_c, \"AppCropper\");","map":{"version":3,"names":["React","useState","ImageCropper","jsxDEV","_jsxDEV","AppCropper","_s","imageToCrop","setImageToCrop","undefined","croppedImage","setCroppedImage","onUploadFile","event","target","files","length","reader","FileReader","addEventListener","result","readAsDataURL","className","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onImageCropped","alt","src","_c","$RefreshReg$"],"sources":["/home/mobcoder/Desktop/reactbatch2022/imageCropper/src/Components/AppCropper.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport './index.css';\nimport ImageCropper from \"./ImageCropper\";\n\nfunction AppCropper() {\n    const [imageToCrop, setImageToCrop] = useState(undefined);\n    const [croppedImage, setCroppedImage] = useState(undefined);\n\n    const onUploadFile = (event) => {\n        if (event.target.files && event.target.files.length > 0) {\n            const reader = new FileReader();\n\n            reader.addEventListener('load', () =>\n                setImageToCrop(reader.result)\n            );\n\n            reader.readAsDataURL(event.target.files[0]);\n        }\n    };\n\n    return (\n        <div className=\"app\">\n            <input\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={onUploadFile}\n            />\n            <div>\n                <ImageCropper\n                    imageToCrop={imageToCrop}\n                    onImageCropped={(croppedImage) => setCroppedImage(croppedImage)}\n                />\n            </div>\n            {\n                croppedImage &&\n                <div>\n                    <h2>Cropped Image</h2>\n                    <img\n                        alt=\"Cropped Image\"\n                        src={croppedImage}\n                    />\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default AppCropper;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,aAAa;AACpB,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAACQ,SAAS,CAAC;EACzD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAACQ,SAAS,CAAC;EAE3D,MAAMG,YAAY,GAAIC,KAAK,IAAK;IAC5B,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,IAAIF,KAAK,CAACC,MAAM,CAACC,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MACrD,MAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;MAE/BD,MAAM,CAACE,gBAAgB,CAAC,MAAM,EAAE,MAC5BX,cAAc,CAACS,MAAM,CAACG,MAAM,CAAC,CAChC;MAEDH,MAAM,CAACI,aAAa,CAACR,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC/C;EACJ,CAAC;EAED,oBACIX,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBnB,OAAA;MACIoB,IAAI,EAAC,MAAM;MACXC,MAAM,EAAC,SAAS;MAChBC,QAAQ,EAAEd;IAAa;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzB,eACF1B,OAAA;MAAAmB,QAAA,eACInB,OAAA,CAACF,YAAY;QACTK,WAAW,EAAEA,WAAY;QACzBwB,cAAc,EAAGrB,YAAY,IAAKC,eAAe,CAACD,YAAY;MAAE;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAClE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA,EAEFpB,YAAY,iBACZN,OAAA;MAAAmB,QAAA,gBACInB,OAAA;QAAAmB,QAAA,EAAI;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACtB1B,OAAA;QACI4B,GAAG,EAAC,eAAe;QACnBC,GAAG,EAAEvB;MAAa;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACpB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAER;AAEd;AAACxB,EAAA,CAzCQD,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AA2CnB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}