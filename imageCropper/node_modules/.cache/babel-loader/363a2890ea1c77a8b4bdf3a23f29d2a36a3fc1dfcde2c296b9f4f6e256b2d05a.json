{"ast":null,"code":"var _jsxFileName = \"/home/mobcoder/Desktop/reactbatch2022/imageCropper/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport ImageResize from './Components/ImageResizer';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [imageToResize, setImageToResize] = useState(undefined);\n  const [resizedImage, setResizedImage] = useState(undefined);\n  const onUploadFile = event => {\n    if (event.target.files && event.target.files.length > 0) {\n      setImageToResize(event.target.files[0]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Image Resizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please, upload an image and it will be showed both original and resized by 50%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: onUploadFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ImageResize, {\n        imageToResize: imageToResize,\n        onImageResized: resizedImage => setResizedImage(resizedImage)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), resizedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Resized Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"Resize Image\",\n        src: resizedImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"8hHhUbi1DpQZQUx3tui19WKo0wA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","ImageResize","useState","jsxDEV","_jsxDEV","App","_s","imageToResize","setImageToResize","undefined","resizedImage","setResizedImage","onUploadFile","event","target","files","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onImageResized","alt","src","_c","$RefreshReg$"],"sources":["/home/mobcoder/Desktop/reactbatch2022/imageCropper/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport ImageResize from './Components/ImageResizer';\nimport { useState } from 'react';\n\nfunction App() {\n  const [imageToResize, setImageToResize] = useState(undefined);\n    const [resizedImage, setResizedImage] = useState(undefined);\n\n    const onUploadFile = (event) => {\n        if (event.target.files && event.target.files.length > 0) {\n            setImageToResize(event.target.files[0]);\n        }\n    };\n\n    return (\n        <div className=\"app\">\n            <h1>Image Resizer</h1>\n            <p>\n                Please, upload an image and it will be showed both original and resized by\n                50%\n            </p>\n            <input\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={onUploadFile}\n            />\n            <div>\n                <ImageResize\n                    imageToResize={imageToResize}\n                    onImageResized={(resizedImage) => setResizedImage(resizedImage)}\n                />\n            </div>\n            {\n                resizedImage &&\n                <div>\n                    <h2>Resized Image</h2>\n                    <img\n                        alt=\"Resize Image\"\n                        src={resizedImage}\n                    />\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAACO,SAAS,CAAC;EAC3D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAACO,SAAS,CAAC;EAE3D,MAAMG,YAAY,GAAIC,KAAK,IAAK;IAC5B,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,IAAIF,KAAK,CAACC,MAAM,CAACC,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MACrDR,gBAAgB,CAACK,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC3C;EACJ,CAAC;EAED,oBACIX,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBd,OAAA;MAAAc,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACtBlB,OAAA;MAAAc,QAAA,EAAG;IAGH;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eACJlB,OAAA;MACImB,IAAI,EAAC,MAAM;MACXC,MAAM,EAAC,SAAS;MAChBC,QAAQ,EAAEb;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzB,eACFlB,OAAA;MAAAc,QAAA,eACId,OAAA,CAACH,WAAW;QACRM,aAAa,EAAEA,aAAc;QAC7BmB,cAAc,EAAGhB,YAAY,IAAKC,eAAe,CAACD,YAAY;MAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAClE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA,EAEFZ,YAAY,iBACZN,OAAA;MAAAc,QAAA,gBACId,OAAA;QAAAc,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACtBlB,OAAA;QACIuB,GAAG,EAAC,cAAc;QAClBC,GAAG,EAAElB;MAAa;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACpB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAER;AAEd;AAAChB,EAAA,CAxCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}