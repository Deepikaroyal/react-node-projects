{"ast":null,"code":"var _jsxFileName = \"/home/mobcoder/Desktop/reactbatch2022/imageCropper/src/Components/ImageCropper.js\",\n  _s = $RefreshSig$();\nimport './index.css';\nimport { Form, Button, Container } from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useEffect, useState } from \"react\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport ReactCrop from \"react-image-crop\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImageCropper() {\n  _s();\n  const [srcImg, setSrcImg] = useState(null);\n  const [image, setImage] = useState(null);\n  const [crop, setCrop] = useState({\n    aspect: 16 / 9\n  });\n  const [result, setResult] = useState(null);\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n  const handleImage = async event => {\n    if (event.target.files.length !== 0) {\n      setSrcImg(URL.createObjectURL(event.target.files[0]));\n      console.log(event.target.files[0]);\n    }\n  };\n  const getCroppedImg = async () => {\n    try {\n      const canvas = document.createElement(\"canvas\");\n      const scaleX = image.naturalWidth / image.width;\n      const scaleY = image.naturalHeight / image.height;\n      canvas.width = crop.width;\n      canvas.height = crop.height;\n      const ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height);\n      const base64Image = canvas.toDataURL(\"image/jpeg\", 1);\n      setResult(base64Image);\n      console.log(result);\n    } catch (e) {\n      console.log(\"crop the image\");\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    console.log(result);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"container\",\n    fluid: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"header\",\n      children: \"React Image Crop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Select Image you want to crop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: handleImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [srcImg && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(ReactCrop, {\n              style: {\n                maxWidth: \"50%\"\n              },\n              src: srcImg,\n              onImageLoaded: setImage,\n              crop: crop,\n              onChange: setCrop\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"cropButton\",\n              onClick: getCroppedImg,\n              children: \"crop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: result,\n              alt: \"cropped image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 26\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 33\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 44\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 49\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"height\",\n        onChange: e => {\n          setHeight(e.target.value);\n        },\n        placeholder: \"height\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"width\",\n        onChange: e => {\n          setWidth(e.target.value);\n        },\n        placeholder: \"width\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: () => {\n          console.log(height, width);\n        },\n        children: \"Extract\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(ImageCropper, \"RzE5owhBm14ZwiEFnmWOmUEIyQo=\");\n_c = ImageCropper;\nexport default ImageCropper;\nvar _c;\n$RefreshReg$(_c, \"ImageCropper\");","map":{"version":3,"names":["Form","Button","Container","useEffect","useState","ReactCrop","jsxDEV","_jsxDEV","ImageCropper","_s","srcImg","setSrcImg","image","setImage","crop","setCrop","aspect","result","setResult","width","setWidth","height","setHeight","handleImage","event","target","files","length","URL","createObjectURL","console","log","getCroppedImg","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","drawImage","x","y","base64Image","toDataURL","e","handleSubmit","preventDefault","className","fluid","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","Label","type","accept","onChange","style","maxWidth","src","onImageLoaded","onClick","alt","variant","name","value","placeholder","_c","$RefreshReg$"],"sources":["/home/mobcoder/Desktop/reactbatch2022/imageCropper/src/Components/ImageCropper.js"],"sourcesContent":["import './index.css';\nimport {Form, Button, Container} from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {useEffect, useState} from \"react\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport ReactCrop from \"react-image-crop\";\n\n\n\nfunction ImageCropper() {\n\n    const [srcImg, setSrcImg] = useState(null);\n    const [image, setImage] = useState(null);\n    const [crop, setCrop] = useState({aspect: 16 / 9});\n    const [result, setResult] = useState(null);\n    const [width, setWidth] = useState(0);\n    const [height, setHeight] = useState(0);\n\n    const handleImage = async (event) => {\n        if(event.target.files.length !== 0){\n            setSrcImg(URL.createObjectURL(event.target.files[0]));\n        console.log(event.target.files[0]);\n        } \n    };\n     \n\n    const getCroppedImg = async () => {\n        try {\n            const canvas = document.createElement(\"canvas\");\n            const scaleX = image.naturalWidth / image.width;\n            const scaleY = image.naturalHeight / image.height;\n            canvas.width = crop.width;\n            canvas.height = crop.height;\n            const ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(\n                image,\n                crop.x * scaleX,\n                crop.y * scaleY,\n                crop.width * scaleX,\n                crop.height * scaleY,\n                0,\n                0,\n                crop.width,\n                crop.height\n            );\n\n            const base64Image = canvas.toDataURL(\"image/jpeg\", 1);\n            setResult(base64Image);\n            console.log(result);\n        } catch (e) {\n            console.log(\"crop the image\");\n        }\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        console.log(result);\n    }\n \n \n\n    return (\n        <Container className=\"container\" fluid=\"md\">\n            <h5 className=\"header\">React Image Crop</h5>\n            <Form onSubmit={handleSubmit}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>Select Image you want to crop</Form.Label>\n                    <div>\n                        <input\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={handleImage}\n                        />\n                    </div>\n                    {/* <img src={srcImg} /> */}\n                    <div>\n                        {srcImg && (\n                            <div>\n                                <ReactCrop\n                                    style={{maxWidth: \"50%\"}}\n                                    src={srcImg} \n                                    onImageLoaded={setImage}\n                                    crop={crop}\n                                    onChange={setCrop}\n                                />\n                                <Button className=\"cropButton\" onClick={getCroppedImg}\n                                >\n                                    crop\n                                </Button>\n                            </div>\n                        )}\n                        {result && (\n                            <div>\n                                <img src={result} alt=\"cropped image\"/>\n                            </div>\n                        )}\n                         \n                    </div>\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button><br /> <br/> <br/><br/><br/>\n                <input type ='text' name = 'height' onChange={(e)=>{setHeight(e.target.value)}} placeholder='height'></input> \n                {/* {console.log(height)} */}\n                <input type = 'text' name = 'width' onChange={(e)=>{setWidth(e.target.value)}} placeholder='width'></input> \n                <Button variant=\"primary\" type=\"submit\" onClick={()=>{console.log(height,width)}}>Extract</Button>\n            </Form>\n        </Container>\n    );\n}\n\nexport default ImageCropper;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}